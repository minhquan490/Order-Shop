plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.graalvm.buildtools.native'
}

group = 'com.bachlinh.order'
version = '1.0.0'

dependencies {
    implementation project(":aot")
    implementation project(":service")
    implementation project(":common:annotation")
    implementation project(":common:core")
    implementation project(":common:entity")
    implementation project(":common:handler")
    implementation project(":common:security")
    implementation project(":common:utils")
    implementation project(":common:repository")
    implementation project(":common:exception")
    implementation project(":common:environment")
    implementation project(":common:setup")
    implementation project(":common:trigger")
    implementation project(":common:validate")
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'javax.cache:cache-api'
    implementation 'org.hibernate.orm:hibernate-core'
    implementation 'org.hibernate.orm:hibernate-jcache'
    implementation 'com.zaxxer:HikariCP'
    implementation "com.lmax:disruptor:${libs.versions.disruptor.get()}"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    modules {
        module("org.springframework.boot:spring-boot-starter-tomcat") {
            replacedBy("org.springframework.boot:spring-boot-starter-jetty", "Use Jetty instead of Tomcat")
        }
        module("org.springframework.boot:spring-boot-starter-logging") {
            replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of logging")
        }
    }
}

test {
    useJUnitPlatform()
}

processAot {
    jvmArgs(List.of('-Xmx6096M'))
}