plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java-library'
    id "org.hibernate.orm"
}

group = 'com.bachlinh.order'
version = "${libs.versions.mainProject.get()}"

dependencies {
    implementation project(":common:annotation")
    implementation project(":common:core")
    implementation project(":common:exception")
    implementation project(":common:analyzer")
    implementation project(":common:environment")
    implementation project(":common:utils")
    implementation project(":service")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework:spring-aop'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation "org.ehcache:ehcache:${libs.versions.ehcacheVersion.get()}"
    implementation "org.apache.commons:commons-lang3:${libs.versions.commonLang3Version.get()}"
    implementation "org.apache.lucene:lucene-core:${libs.versions.lunceneVersion.get()}"
    implementation "org.apache.lucene:lucene-queryparser:${libs.versions.lunceneVersion.get()}"
    implementation "org.apache.lucene:lucene-analysis-common:${libs.versions.lunceneVersion.get()}"
    implementation "com.google.guava:guava:${libs.versions.guavaVersion.get()}"
    implementation "ch.qos.logback:logback-core:${libs.versions.logback.get()}"
    implementation "ch.qos.logback:logback-classic:${libs.versions.logback.get()}"
    implementation "org.slf4j:slf4j-api:${libs.versions.slf4j.get()}"

    annotationProcessor project(":annotation-processor")
    annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen'
}


test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}