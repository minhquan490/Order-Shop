plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java-library'
}

group = 'com.bachlinh.order'
version = '1.0.0'

dependencies {
    implementation project(":common:utils")
    implementation project(":common:exception")
    implementation project(":common:annotation")
    implementation project(":common:environment")
    implementation project(":common:analyzer")
    implementation project(":service")
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-aspects'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation "org.eclipse.jetty.http3:http3-server"
    implementation "org.eclipse.jetty.http2:http2-server"
    implementation "org.eclipse.jetty:jetty-alpn-server"
    implementation "org.eclipse.jetty:jetty-alpn-java-server"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.google.apis:google-api-services-gmail:${libs.versions.gmailApi.get()}"
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'jakarta.persistence:jakarta.persistence-api'

    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    runtimeOnly "org.apache.tomcat:tomcat-catalina:${libs.versions.tomcatVersion.get()}"

    compileOnly 'org.projectlombok:lombok'
    compileOnly "jakarta.servlet:jakarta.servlet-api"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    constraints {
        implementation("com.google.guava:guava:${libs.versions.guavaVersion.get()}") {
            because("Sync with project")
        }
    }
}

test {
    useJUnitPlatform()
}