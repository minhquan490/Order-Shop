plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.google.protobuf'
    id 'java-library'
}

group = 'com.bachlinh.order'
version = "${libs.versions.mainProject.get()}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":common:core")

    implementation "io.netty:netty-all:${libs.versions.netty.get()}"
    implementation "io.netty.incubator:netty-incubator-codec-http3:${libs.versions.nettyQuic.get()}"
    implementation "ch.qos.logback:logback-core:${libs.versions.logback.get()}"
    implementation "ch.qos.logback:logback-classic:${libs.versions.logback.get()}"
    implementation "com.google.guava:guava:${libs.versions.guavaVersion.get()}"

    compileOnly "jakarta.servlet:jakarta.servlet-api"
//    compileOnly 'org.springframework:spring-web'
    compileOnly 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
